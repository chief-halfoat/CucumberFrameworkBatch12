Gherkin Language
    Given - pre-condition
    When - actions we need to perform
    And - supporting tag
    Then - expected results

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Recap
*****
What is a framework?
--an organized structure of folders and packages which allows us to write clean and maintainable code

build management tool
--maven

pom.xml is the main configuration file in a maven project

main - used to write the code for development
test - used to write the code for testing the application
    --java
        --for tech/coding
    --resources
        --for non-technical/non-coding we use resources

cucumber supports BDD(Behavior Driven Development)
    --uses gherkin language(plain english) to write the scenarios

Scenario
    --it is a test case
    Given -- pre-condition
    When -- actions
    And -- supporting tag
    Then -- expected results

User Story 12345 - Employee Search
    Scenario - search employee by id
        Given User is navigated to HRMS Application
        When User valid admin credentials
        And User clicks on login button
        And User navigates to Employee List page
        When User enters valid employee id
        And clicks on search button
        Then User is able to see Employee Information

    Scenario - search employee by name
        Given User is navigated to HRMS Application
        When User valid admin credentials
        And User clicks on login button
        And User navigates to Employee List page
        When User enters valid employee name
        And clicks on search button
        Then User is able to see Employee Information

file where we write BDD scenarios if feature file
this file has .feature extension

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Class 3
Recap -

We use feature file to write our scenarios
    ex - search employee by id
         search employee by name

In feature file we write scenarios using gherkin language
    --Given/When/And/Then/Scenario/Feature
After feature file, we need to create step definitions

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Class 4
Recap -
Common methods class in our framework is used to write all the methods we will be using in majority of scenarios (Code reusabilty)

sendText, method, click,

//Common Methods use overloading polymorphism with user created classes
//Common Method extensions use inheritance

Constants class
    We added waits (implicit & explicit) and test data path

POM vs pom.xml
Page Object Model is a design model

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Class 5
Recap -

Creating multiple steps classes for multiple feature files
Page Object Model design pattern

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Class 6
Recap -

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Class 7
Recap -

Hooks - to write the pre- & post-conditions of the project
            @before & @after
        we always write hooks under the steps package

Data driven testing
    Using examples table & scenario outline
    Using data table

Maven repo, dependencies, config.properties, constants, config reader, pages, runners, hooks, testdata directory
features

